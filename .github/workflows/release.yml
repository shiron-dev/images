name: release
on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
jobs:
  release-please:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      paths_released: ${{ steps.release.outputs.paths_released }}
      result: ${{ toJSON(steps.release.outputs) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Release please
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
        id: release
  release:
    needs: release-please
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        package: ${{ fromJson(needs.release-please.outputs.paths_released) }}
    defaults:
      run:
        working-directory: ${{ matrix.package }}
    if: ${{ needs.release-please.outputs.paths_released != '[]' }}
    steps:
      - uses: actions/checkout@v4
      - name: Get Dockerfiles
        id: get-dockerfiles
        run: |
          DOCKERFILES=$(find . -maxdepth 1 -name "Dockerfile.*" | sort | jq -Rsc 'split("\n")[0:-1]')
          echo "dockerfiles=$DOCKERFILES" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"
      - uses: shiron-dev/actions/matrix-output-write@eebb6216252466a58fb3aeeb2007cf8c43be1418 # v1.2.1
        with:
          matrix-step-name: release
          matrix-key: ${{ matrix.package }}
          outputs: |-
            dockerfiles: ${{ steps.get-dockerfiles.outputs.dockerfiles }}
  release-read:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: release
    outputs:
      result: ${{ steps.vars.outputs.result }}
    steps:
      - uses: shiron-dev/actions/matrix-output-read@eebb6216252466a58fb3aeeb2007cf8c43be1418 # v1.2.1
        id: read
        with:
          matrix-step-name: release
      - name: Check outputs
        id: vars
        run: |
          echo "result=$(echo '${{ steps.read.outputs.result }}' | jq -c '.[] | [.key as $k | .value.dockerfiles[] | {key: $k, value: .}]')" >> "$GITHUB_OUTPUT"
  docker-build:
    needs: release-read
    runs-on: ${{ contains(matrix.kv.value, 'arm') && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    timeout-minutes: 360
    strategy:
      matrix:
        kv: ${{ fromJson(needs.release-read.outputs.result) }}
    name: docker-build ${{ matrix.kv.key }} (${{ matrix.kv.value }})
    steps:
      - uses: actions/checkout@v4
      - name: Set outputs
        id: vars
        run: |
          {
            echo "tag=$(jq -r '.["${{ matrix.kv.key }}"]' .release-please-manifest.json)"
            echo "platform=$(./scripts/get_platform.sh ${{ matrix.kv.key }}/${{ matrix.kv.value }})"
            echo "ghcr_repo=ghcr.io/${{ github.repository_owner }}/${{ matrix.kv.key }}"
          } >> "$GITHUB_OUTPUT"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            ${{ steps.vars.outputs.ghcr_repo }}
      - uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 #v3.6.0
      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - run: echo "${{ steps.vars.outputs.platform }}"
      - name: Build
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        id: build
        with:
          provenance: false
          context: ${{ matrix.kv.key }}
          platforms: ${{ steps.vars.outputs.platform }}
          file: "${{ matrix.kv.key }}/${{ matrix.kv.value }}"
          outputs: type=image,"name=${{ steps.vars.outputs.ghcr_repo }}",push-by-digest=true,name-canonical=true,push=true
      # - id: build
      #   run: |
      #     echo "digest=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)" >> "$GITHUB_OUTPUT"
      - uses: shiron-dev/actions/matrix-output-write@eebb6216252466a58fb3aeeb2007cf8c43be1418 # v1.2.1
        with:
          matrix-step-name: docker-build
          matrix-key: ${{ matrix.kv.key }}
          outputs: |-
            dockerfile: ${{ matrix.kv.value }}
            digest: ${{ steps.build.outputs.digest }}
  docker-build-read:
    needs: docker-build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      result: ${{ steps.vars.outputs.result }}
    steps:
      - uses: shiron-dev/actions/matrix-output-read@eebb6216252466a58fb3aeeb2007cf8c43be1418 # v1.2.1
        id: read
        with:
          matrix-step-name: docker-build
      - name: Check outputs
        id: vars
        run: |
          echo '${{ steps.read.outputs.result }}'
          echo "result=$(echo '${{ steps.read.outputs.result }}' | jq -c '[{key: "kali-linux", values: (map(.value.digest))}]')" >> "$GITHUB_OUTPUT"
  docker-merge:
    needs:
      - docker-build-read
      - release-please
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        kv: ${{ fromJson(needs.docker-build-read.outputs.result) }}
    name: docker-merge ${{ matrix.kv.key }}
    env:
      MAJOR_KEY: ${{ matrix.kv.key }}--major
      MINOR_KEY: ${{ matrix.kv.key }}--minor
      PATCH_KEY: ${{ matrix.kv.key }}--patch
    steps:
      - run: |
          echo '${{ needs.docker-build-read.outputs.result }}'
          echo '${{ matrix.kv }}'
          echo '${{ matrix.kv.key }}'
          echo '${{ toJSON(matrix.kv.values) }}'
      - uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}
      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.kv.key }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ fromJSON(needs.release-please.outputs.result)[ env.MAJOR_KEY ] }}.${{ fromJSON(needs.release-please.outputs.result)[ env.MINOR_KEY ] }}
            type=raw,value=${{ fromJSON(needs.release-please.outputs.result)[ env.MAJOR_KEY ] }}.${{ fromJSON(needs.release-please.outputs.result)[ env.MINOR_KEY ] }}.${{ fromJSON(needs.release-please.outputs.result)[ env.PATCH_KEY ] }}
            type=raw,value=latest
      - name: Create manifest list and push
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create $(echo "$DOCKER_METADATA_OUTPUT_JSON" | jq -cr '.tags | map("-t " + .) | join(" ")') \
            $(printf 'ghcr.io/${{ github.repository_owner }}/${{ matrix.kv.key }}@%s ' $(echo '${{ toJSON(matrix.kv.values) }}' | jq -r '.[]'))
